{
  "items": [
    {
      "url": "https://api.github.com/repos/angular/material2/issues/9746",
      "repository_url": "https://api.github.com/repos/angular/material2",
      "labels_url": "https://api.github.com/repos/angular/material2/issues/9746/labels{/name}",
      "comments_url": "https://api.github.com/repos/angular/material2/issues/9746/comments",
      "events_url": "https://api.github.com/repos/angular/material2/issues/9746/events",
      "html_url": "https://github.com/angular/material2/issues/9746",
      "id": 293731633,
      "number": 9746,
      "title": "Add another Input to allow \"All\" option in table Paginator",
      "user": {
        "login": "ienzam",
        "id": 607461,
        "avatar_url": "https://avatars3.githubusercontent.com/u/607461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ienzam",
        "html_url": "https://github.com/ienzam",
        "followers_url": "https://api.github.com/users/ienzam/followers",
        "following_url": "https://api.github.com/users/ienzam/following{/other_user}",
        "gists_url": "https://api.github.com/users/ienzam/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ienzam/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ienzam/subscriptions",
        "organizations_url": "https://api.github.com/users/ienzam/orgs",
        "repos_url": "https://api.github.com/users/ienzam/repos",
        "events_url": "https://api.github.com/users/ienzam/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ienzam/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 311421127,
          "url": "https://api.github.com/repos/angular/material2/labels/feature",
          "name": "feature",
          "color": "d4c5f9",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "andrewseguin",
        "id": 22898577,
        "avatar_url": "https://avatars3.githubusercontent.com/u/22898577?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewseguin",
        "html_url": "https://github.com/andrewseguin",
        "followers_url": "https://api.github.com/users/andrewseguin/followers",
        "following_url": "https://api.github.com/users/andrewseguin/following{/other_user}",
        "gists_url": "https://api.github.com/users/andrewseguin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/andrewseguin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/andrewseguin/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewseguin/orgs",
        "repos_url": "https://api.github.com/users/andrewseguin/repos",
        "events_url": "https://api.github.com/users/andrewseguin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/andrewseguin/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "andrewseguin",
          "id": 22898577,
          "avatar_url": "https://avatars3.githubusercontent.com/u/22898577?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/andrewseguin",
          "html_url": "https://github.com/andrewseguin",
          "followers_url": "https://api.github.com/users/andrewseguin/followers",
          "following_url": "https://api.github.com/users/andrewseguin/following{/other_user}",
          "gists_url": "https://api.github.com/users/andrewseguin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/andrewseguin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/andrewseguin/subscriptions",
          "organizations_url": "https://api.github.com/users/andrewseguin/orgs",
          "repos_url": "https://api.github.com/users/andrewseguin/repos",
          "events_url": "https://api.github.com/users/andrewseguin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/andrewseguin/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2018-02-02T00:22:46Z",
      "updated_at": "2018-02-02T01:06:35Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "#### Bug, feature request, or proposal:\r\nFeature Request\r\n\r\n\r\n#### What is the expected behavior?\r\nIn Paginator, I expect to show users an option to show the whole table, so page size dropdown list will contain an option like \"All\" [10, 20, 50, All]\r\n\r\n#### What is the current behavior?\r\nIn current api, we can only give numeric options and no way to add custom options in Paginator (may be if we hack the i10n, but not desirable).\r\n\r\n#### What is the use-case or motivation for changing an existing behavior?\r\nSame table can show few rows for small customers and a lot of rows for big customers.\r\nFor small tables, customers want to see the whole table together.\r\nSometimes for big tables also, customers want to see the whole table for easy comparison.\r\n\r\n#### Which versions of Angular, Material, OS, TypeScript, browsers are affected?\r\nAll.\r\n\r\n\r\n#### Is there anything else we should know?\r\nOne issue with \"All\" is that for some tables, we may not know how many rows exist.\r\nThat's why having an opt-in option will be great.",
      "score": 1
    },
    {
      "url": "https://api.github.com/repos/angular/material2/issues/9745",
      "repository_url": "https://api.github.com/repos/angular/material2",
      "labels_url": "https://api.github.com/repos/angular/material2/issues/9745/labels{/name}",
      "comments_url": "https://api.github.com/repos/angular/material2/issues/9745/comments",
      "events_url": "https://api.github.com/repos/angular/material2/issues/9745/events",
      "html_url": "https://github.com/angular/material2/issues/9745",
      "id": 293712833,
      "number": 9745,
      "title": "Is there a way to easily wrap or extend the components/directives in this library?",
      "user": {
        "login": "ShawnMercado",
        "id": 17646136,
        "avatar_url": "https://avatars2.githubusercontent.com/u/17646136?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ShawnMercado",
        "html_url": "https://github.com/ShawnMercado",
        "followers_url": "https://api.github.com/users/ShawnMercado/followers",
        "following_url": "https://api.github.com/users/ShawnMercado/following{/other_user}",
        "gists_url": "https://api.github.com/users/ShawnMercado/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ShawnMercado/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ShawnMercado/subscriptions",
        "organizations_url": "https://api.github.com/users/ShawnMercado/orgs",
        "repos_url": "https://api.github.com/users/ShawnMercado/repos",
        "events_url": "https://api.github.com/users/ShawnMercado/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ShawnMercado/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "closed",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2018-02-01T22:52:02Z",
      "updated_at": "2018-02-01T23:13:56Z",
      "closed_at": "2018-02-01T23:13:56Z",
      "author_association": "NONE",
      "body": "I like using this library, it works very well and helps achieve a very clean effect.  The problem is, for my job, it's against coding standards to put third-party components/directives directly into html... the justification is that it hurts maintainability as its a lot harder to pull out than it is to put in.\r\n\r\nI was hoping there was a way to wrap or extend each item I needed with my own name-spaced element, for re-use throughout a project, so that if we ever want to change something we simply change the implementation of that element to another library or to our own custom code.  But so far I cannot find a way to do this.",
      "score": 1
    },
    {
      "id": 293731636,
      "title": "qw",
      "user": {
        "login": "qwwww",
        "avatar_url": "https://s18.postimg.org/8e6cashe1/no-image.jpg",
        "html_url": "https://s18.postimg.org/"
      },
      "created_at": "04/04/2018"
    }
  ]
}